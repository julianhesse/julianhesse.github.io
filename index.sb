# %%--- [markdown]
# properties:
#   locked: true
# ---%%
# Final project
# %% [css]
.cell-gutter, .cell-top {
    background-color: #fff;  /* Change this to #faf */
    
    /* Uncomment the next line for a dark mode effect! */
    filter: invert() hue-rotate(180deg); 
}

.cell-bottom {
  /* Change background to #000 for full dark mode */
  background-color: #fff;
}

img {
    background-color: transparent;
}

starboard-notebook {
  background-color: #000;
}

.cells-container {
  	background-color: #000;
}

.my-control {
   background-color: #fff
}

# %% [css]
#map { height: 600px; }

div.leaflet-marker-icon.q-marker-cluster:hover {
  fill-opacity: 1;
  opacity: 0.4;
  background-color: transparent;
}
/*
div.leaflet-marker-icon.q-marker-cluster:hover > div {
  fill-opacity: 0;
  opacity: 0;
  background-color: transparent;
  visibility: hidden;
}
.q-maker-cluster:hover{
  opacity: 0;
} */

# %%--- [html]
# properties:
#   run_on_load: true
# ---%%
<div id="map"></div>
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
resp = await fetch("./json_files/data_2018.json");
var stats_18_json = await resp.json();

console.log(stats_18_json[0]);
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
var map = L.map('map').setView([52.533, 13.426], 14);
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
var cyclosm = L.tileLayer('https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
                minZoom: 0,
                maxZoom: 20,
            }).addTo(map);
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
function preprocessData(data) {
  for (var i = 0; i < data.length; i++) {
    data[i].lat = data[i].YGCSWGS84;
    data[i].lng = data[i].XGCSWGS84;
  }
}

preprocessData(stats_18_json)
console.log(stats_18_json[0]);
# %% [javascript]
for (var i = 0; i < 100; i++) {
    L.marker([stats_18_json[i].lat, stats_18_json[i].lng]).addTo(map);
}
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
var pointCluster = new QCluster.PointClusterer(stats_18_json, "accidents", map, 'accid-layer',
                                            {
                                              reportingProperty: 'UKATEGORIE',
                                              backgroundColor: '#0099dd',
                                              clusterTolerance: 100,
                                              //defaultPalette: ['#BBE5ED', '#B399A2', '#784F41', '#660000'],
                                              defaultPalette: ['#0909D2', '#D80F41', '#111111', '#660000']
                                            });
# %% [javascript]
// remove pointCluster
pointCluster.removeLayer()
delete pointCluster;
# %% [javascript]
console.log(pointCluster.layer)
# %% [javascript]
console.log(pointCluster)
# %% [javascript]
// replace Points in pointCluser
pointCluster.replacePoints(stats_18_json.slice(0,10000))
# %%--- [javascript]
# properties:
#   run_on_load: true
# ---%%
function applyFilters(filters) {
  return stats_18_json.filter((datapoint) => {

    for(var i = 0; i < filters.length; i++) {
      if(filters[i](datapoint)) {
        return false;
      };
    }
    return true;
  });
}
// 0 = trocken
// 1 = nass/feucht/schlüpfrig
// 2 = winterglatt

// 0 = Tageslicht
// 1 = Dämmerung
// 2 = Dunkelheit


var road_values = ["trocken", "nass", "glatt"];

var road_filters = [
  datapoint => datapoint["STRZUSTAND"] == 0,
  datapoint => datapoint["STRZUSTAND"] == 1,
  datapoint => datapoint["STRZUSTAND"] == 2
];


var light_values = ["Tageslicht", "Dämmerung", "Dunkelheit"];

var light_filters = [
  datapoint => datapoint["ULICHTVERH"] == 0,
  datapoint => datapoint["ULICHTVERH"] == 1,
  datapoint => datapoint["ULICHTVERH"] == 2
];


function checkboxClick(box) {
  var filters = [];
  for(var i = 0; i < 3; i++) {
    
    if(!document.getElementById(`cb_road_${i+1}`).checked) {
      filters.push(road_filters[i]);
    }

    if(!document.getElementById(`cb_light_${i+1}`).checked) {
      filters.push(light_filters[i]);
    }
  }

  var data = applyFilters(filters);
  console.log(data.length);
  pointCluster.replacePoints(data);
}

function toggleFilters() {
  console.log("clicked");
  var filter_div = document.getElementById("inner_container");// document.getElementsByClassName("my-control")[0];

  if (filter_div.style.display === "none") {
    filter_div.style.display = "block";
  } else {
    filter_div.style.display = "none";
  }
  console.log(filter_div);
}


var input_html = "<button type='hide' onclick='toggleFilters()'>Hide</button><br><br>";
input_html += "<div id=inner_container><br>"
input_html += "Straßenbeschaffenheit <br>\n";

for(var i = 0; i < 3; i++) {
   
  input_html += `<input type="checkbox" onchange="checkboxClick(this);" id="cb_road_${i+1}" checked> \n`
  input_html += `<label for="cb_road_${i+1}">${road_values[i]}</label> \n`;
}

input_html += "<br><br> Lichtverhältnisse <br>\n";

for(var i = 0; i < 3; i++) {
   
  input_html += `<input type="checkbox" onchange="checkboxClick(this);" id="cb_light_${i+1}" checked> \n`
  input_html += `<label for="cb_light_${i+1}">${light_values[i]}</label> \n`;
}

input_html += "</div>";

L.Control.MyControl = L.Control.extend({
  onAdd: function(map) {

    var el = L.DomUtil.create('div', 'leaflet-bar my-control');

    el.innerHTML = input_html;
    
    
    return el;
  },

  onRemove: function(map) {
    // Nothing to do here
  }
});

L.control.myControl = function(opts) {
  return new L.Control.MyControl(opts);
}

L.control.myControl({
    position: 'topright'
}).addTo(map);
